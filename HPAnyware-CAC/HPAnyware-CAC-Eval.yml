AWSTemplateFormatVersion: '2010-09-09'
Description: Template to deploy a Ubuntu instance in AWS with Cloud Access Connector(CAC) pre-installed, AWS Instance is billed hourly.
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VpcId
          - SubnetId
      - 
        Label: 
          default: "Amazon EC2 Configuration"
        Parameters: 
          - InstanceType
          - KeyName
      - 
        Label: 
          default: "Security Group Configuration"
        Parameters: 
          - SSHLocation
          - SecurityGroup
      - 
        Label: 
          default: "CAC Configuration parameters"
        Parameters: 
          - ADDomain
          - ADUser
          - ADPassword
          - CACToken
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VPC which the Security Group will be created in.
  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: Public subnet is needed for most deployments, select a subnet which to launch an instance in.
  SecurityGroup:
    Description: Name of security group that will allow communications to AD and PCoIP Host
    Type: 'AWS::EC2::SecurityGroup::Id'
  InstanceType:
    Type: String
    Description: Select a AWS instance type for your workload.
    Default: t3.xlarge
    AllowedValues:
      - t2.xlarge
      - t2.2xlarge
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
    ConstraintDescription: Understand that PCoIP pixel traffic will be passed through instance, understand each instances throughput.
  KeyName:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
  SSHLocation:
    Description: The IP address that can SSH to instances. Use 'What is my IP' to get your public IP then add /32 to end of IP.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.  
  CACToken:
      Type: String
      Description: CAC Token generated from CAS Manager Service
  ADDomain:
      Type: String
      Description: Name of active directory domain that CAC will join.
      MinLength: 3
      MaxLength: 64
  ADUser:
      Type: String
      Description: Name of active directory administrator or user with AD join permissions.
      MinLength: 3
      MaxLength: 64
  ADPassword:
      Type: String
      Description: Password for active directory administrator or user with AD join permissions.
      NoEcho: true
      MinLength: 3
      MaxLength: 64
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
Mappings:
  RegionMap:
    af-south-1:
      AMI: ami-0ec210ef9f4c11825
    ap-east-1:
      AMI: ami-00baacaab0a614366
    ap-northeast-1:
      AMI: ami-009cb0aaec90b8ba7
    ap-northeast-2:
      AMI: ami-057e9baf101536eb5
    ap-northeast-3:
      AMI: ami-0d7a85251ac064960
    ap-south-1:
      AMI: ami-0e3a9ffb834f9aff8
    ap-southeast-1:
      AMI: ami-0e13ba2eb52a4d9fa
    ap-southeast-2:
      AMI: ami-005745aa1052331f5
    ca-central-1:
      AMI: NOT_SUPPORTED
    eu-central-1:
      AMI: NOT_SUPPORTED
    eu-north-1:
      AMI: ami-045c3f9b19b1df4cd
    eu-south-1:
      AMI: ami-05c829c6ee7d5e3b6
    eu-west-1:
      AMI: ami-09b8c888045e2e9a3
    eu-west-2:
      AMI: ami-0043e8105a5ff6f9b
    eu-west-3:
      AMI: ami-024351f6e97acc2b9
    me-south-1:
      AMI: ami-01f323da5388ba825
    sa-east-1:
      AMI: ami-00baacaab0a614366
    us-east-1:
      AMI: ami-04e814f85be5f1d1d
    us-east-2:
      AMI: ami-08887d2a12ce1684a
    us-west-1:
      AMI: ami-00ceec5f3ea7dd820
    us-west-2:
      AMI: ami-0a2bf3f5ee514919a
Resources:
  HPAnyWareCACInstance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref PCoIPSecurityGroup
        - !Ref SecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
         - Key: Name
           Value: 'HPAnyWare-CAC-Instance'
      BlockDeviceMappings:
         - DeviceName: /dev/sda1
           Ebs:
             VolumeType: gp2
             VolumeSize: 30     
      UserData:
         Fn::Base64:
            !Sub |         
                  #!/bin/bash
                  sudo apt upgrade
                  curl -L https://dl.teradici.com/yj39yHtgj68Uv2Qf/cloud-access-connector/raw/names/cloud-access-connector-linux-tgz/versions/latest/cloud-access-connector_latest_Linux.tar.gz > /home/ubuntu/cloud-access-connector.tar.gz
                  sudo tar xvzf /home/ubuntu/cloud-access-connector.tar.gz -C /home/ubuntu
                  sleep 5
                  cd /home/ubuntu/usr/sbin
                  sudo ./cloud-access-connector install -t ${CACToken} --domain ${ADDomain} --sa-user ${ADUser} --sa-password ${ADPassword} --self-signed --accept-policies
                   
  PCoIPSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: SG to allow communications for PCoIP Protocol
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
          Description: 'Allow SSH traffic for administration'
        - IpProtocol: tcp
          FromPort: '4172'
          ToPort: '4172'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow encrypted PCoIP pixel traffic'
        - IpProtocol: udp
          FromPort: '4172'
          ToPort: '4172'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow encrypted PCoIP pixel traffic'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow PCoIP session establishment authentication'
        - IpProtocol: tcp
          FromPort: '60443'
          ToPort: '60443'
          CidrIp: '0.0.0.0/0'
          Description: 'Alternative Port for PCoIP session establishment authentication'
        - IpProtocol: udp
          FromPort: '64172'
          ToPort: '64172'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow PCoIP collaboration sessions'
      Tags:
        - Key: Name
          Value: HPAnyWare-CAC
Outputs:
  HPAnyWareCACInstanceId:
    Description: HPAnyWare-CAC instance id 
    Value: !Ref HPAnyWareCACInstance
  PrivateIP:
    Description: Private IP address of instance
    Value: !GetAtt
      - HPAnyWareCACInstance
      - PrivateIp
  PublicIP:
    Description: Public IP address of instance
    Value: !GetAtt
      - HPAnyWareCACInstance
      - PublicIp
  
