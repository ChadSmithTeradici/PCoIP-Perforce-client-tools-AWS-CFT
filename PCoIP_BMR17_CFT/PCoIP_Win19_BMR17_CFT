AWSTemplateFormatVersion: '2010-09-09'
Description: Template to deploy a NVIDIA enabled EC2 instance from AWS Marketplace AMI that has Teradici PCoIP Ultra software installed. Build also includes DaVinci Resolve 17.4.3 software. AWS Instance is billed hourly.
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VpcId
          - SubnetId
      - 
        Label: 
          default: "Amazon EC2 Configuration"
        Parameters: 
          - InstanceType
          - KeyName
      - 
        Label: 
          default: "Security Group Configuration"
        Parameters: 
          - RDPLocation   
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VPC which the Security Group will be created in.
  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: Subnet in which to launch an instance in.
  InstanceType:
    Type: String
    Description: Select a NVIDIA GPU enabled instance for your workload.
    Default: g4dn.2xlarge
    AllowedValues
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.16xlarge
      - g5.4xlarge
      - g5.8xlarge
      - g5.16xlarge
      - g3s.4xlarge
      - g3s.8xlarge
      - g3s.16xlarge
    ConstraintDescription: must be a valid EC2 NVIDIA instance type.
  KeyName:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
  RDPLocation:
    Description: The IP address that can RDP to instances. Use 'What is my IP' to get your public IP then add /32 to end of IP.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.  
Mappings:
  RegionMap:
    af-south-1:
      AMI: ami-05eb6946a6ff73254
    ap-east-1:
      AMI: ami-07a93f0be3dc5826a
    ap-northeast-1:
      AMI: ami-0d0243bd8ed265ddf
    ap-northeast-2:
      AMI: ami-041118a7ba2a96c9e
    ap-northeast-3:
      AMI: ami-06db2995eb9735ddd
    ap-south-1:
      AMI: ami-05eb6946a6ff73254
    ap-southeast-1:
      AMI: ami-06506ee91dfcdee70
    ap-southeast-2:
      AMI: ami-04f7a8dc07025fc0b
    ca-central-1:
      AMI: NOT_SUPPORTED
    eu-central-1:
      AMI: NOT_SUPPORTED
    eu-north-1:
      AMI: ami-08fd7f1e368673351
    eu-south-1:
      AMI: ami-0705000953d78cb8b
    eu-west-1:
      AMI: ami-01f28b1332cbacb4e
    eu-west-2:
      AMI: ami-0870a18b8cedd84d0
    eu-west-3:
      AMI: ami-0af111f6035e06547
    me-south-1:
      AMI: ami-033f287dc15ec3f54
    sa-east-1:
      AMI: ami-0a5a65b6a574de580
    us-east-1:
      AMI: ami-0f39ee67fa1bec70d
    us-east-2:
      AMI: ami-0aa7d52b56f54d9d8
    us-west-1:
      AMI: ami-087c61c60466ce5b6
    us-west-2:
      AMI: ami-0a057c411c7e22a77
Resources:
  PCoIPGFXInstance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref PCoIPSecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
         - Key: Name
           Value: 'PCoIP-GFX-Resolve17'
      BlockDeviceMappings:
         - DeviceName: /dev/sda1
           Ebs:
             VolumeType: gp2
             VolumeSize: 300     
      UserData:
         Fn::Base64:
            !Sub |         
                  <powershell>
                  $ErrorActionPreference="Stop"
                  # Set the location to the registry for PCoIP Setting
                  Set-Location -Path 'HKLM:\SOFTWARE\Policies\Teradici\PCoIP\pcoip_admin'
                  # Create new reg files for PCoIP Ultra
                  New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Teradici\PCoIP\pcoip_admin' -Name 'pcoip.event_filter_mode' -Value "00000003" -PropertyType dword -Force
                  New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Teradici\PCoIP\pcoip_admin' -Name 'pcoip.ultra' -Value "00000003" -PropertyType dword -Force
                  New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Teradici\PCoIP\pcoip_admin' -Name 'pcoip.ultra_offload_mpps' -Value "00000010" -PropertyType dword -Force
                  # Get out of the Registry
                  Pop-Location
                  # remove unneeded desktop shortcuts
                  Remove-Item "C:\Users\Public\Desktop\Teradici PCoIP Clients.url"
                  Remove-Item "C:\Users\Public\Desktop\Teradici Website.url"
                  Remove-Item "C:\Users\Administrator\Desktop\EC2 Feedback.website"
                  Remove-Item "C:\Users\Administrator\Desktop\EC2 Microsoft Windows Guide.website"
                  # Install Choco
                  Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
                  # enable unattended installs
                  choco feature enable -n allowGlobalConfirmation
                  # Install appliactions
                  choco install googlechrome --ignore-checksums
                  choco install wget --ignore-checksums
                  #Set Chrome as default browser
                  Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\Shell\Associations\UrlAssociations\http\UserChoice' -Name ProgID -Value "ChromeHTML"
                  Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\Shell\Associations\UrlAssociations\https\UserChoice' -Name ProgID -Value "ChromeHTML"
                  # Source URL
                  $url = "https://www.techspot.com/downloads/downloadnow/7205/?evp=adadc9aa6631f9c4c3d404cceec191a1&file=9558"
                  $output = "C:\Users\Administrator\Downloads\DaVinci_Resolve_17.4.3_Windows.zip"
                  # Download the file
                  C:\ProgramData\chocolatey\bin\wget.exe -q $url -O $output
                  # Unzip and extract 
                  Expand-Archive C:/Users/Administrator/Downloads/DaVinci_Resolve_17.4.3_Windows.zip -DestinationPath C:/Users/Administrator/Downloads/DaVinci_Resolve_17.4.3_Windows 
                  # run Installer
                  $pathvargs = {C:\Users\Administrator\Downloads\DaVinci_Resolve_17.4.3_Windows\DaVinci_Resolve_17.4.3_Windows.exe /q}
                  Invoke-Command -ScriptBlock $pathvargs
                  </powershell>
  PCoIPSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: SG to allow communications for PCoIP Protocol
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref RDPLocation
          Description: 'Allow RDP traffic for PCoIP patches and troubleshooting'
        - IpProtocol: tcp
          FromPort: '4172'
          ToPort: '4172'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow encrypted PCoIP pixel traffic'
        - IpProtocol: udp
          FromPort: '4172'
          ToPort: '4172'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow encrypted PCoIP pixel traffic'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow PCoIP session establishment authentication'
        - IpProtocol: tcp
          FromPort: '60443'
          ToPort: '60443'
          CidrIp: '0.0.0.0/0'
          Description: 'Alternative Port for PCoIP session establishment authentication'
        - IpProtocol: udp
          FromPort: '64172'
          ToPort: '64172'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow PCoIP collaboration sessions'
      Tags:
        - Key: Name
          Value: PCoIP-SG
Outputs:
  PCoIPGFXInstanceId:
    Description: PCoIP GFX instance id 
    Value: !Ref PCoIPGFXInstance
  PrivateIP:
    Description: Private IP address of instance
    Value: !GetAtt
      - PCoIPGFXInstance
      - PrivateIp
  PublicIP:
    Description: Public IP address of instance
    Value: !GetAtt
      - PCoIPGFXInstance
      - PublicIp
